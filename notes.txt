| echo ''; |--comando para printar coisar na tela, pode ser usada tags html dentro desse
              comando.
            -- para printar expressões concatenadas,usamos . (ponto),exemplo
            echo $x.', texto'.$y.", mais texto", ou podemos colocar tudo entre aspas
            com "$x, texto $y, mais texto",lembrando que as aspas tem que ser duplas
            , caso seja usada aspas simple, serão mostrado o texto cru.

-VARIAVEIS-
|-sempre começam com $
|-são case sensitive
|-o php suporta os quatro tipos primitivos:inteiro,real,string,booleano
  , ele não te obriga a declarar o tipo junto da variavel pois ele ja converte
  automaticamente de pendendo da atribuição, porém através de um typecast é possivel
  especificar de qual tipo qual tipo a variavel será ,logo é possivel especificar
  para os tipos inteiros: int , integer.Para os tipos reais:real, float, double.Para
  strings sómente é possivel declarar os tipo string.E para valores booleanos não é
  possivel fazer um typecast especifico.

OPERADORES ARITMÉTICOS
+ SOMA
- SUBTRAÇÃO
* mULTIPLICAÇÃO
/ MULTIPLICAÇÃO
% MÓDULO
--ORDEM DE PRECEDENCIA
1= ()
2= *,/,%
3= +,-

RECEBENDO VALORES PELA URL
URL - www.site.com/arquivo.php?a=1&b=2
      |-as variaveis enviadas aqui foram a e b
      |-para manipulalas no php usamos a variavel global $_GET que é um array
        o valor de a da URL vai estar no index de mesmo nome da variavel
        ,logo $_GET["a"] vai conter o valor 1.

MÉTODOS PARA NÚMEROS
abs() - retorna o valor absoluto do número
pow(a,b) - faz a potenciação de a por b
sqrt() - retorna a raiz quadrada do parametro
round() - retorna o valor arredondado do parametro
ceil() - retorna o valor arredondado para cima do parametro
floor() - retorna o valor arredondado para baixo do parametro
intval() - retorna a parte inteira de um valor float
number_format(x,2,",",'.') - retorna o valor de x com 2 casas decimais e com o divisor de
                             decimal sendo uma virgular e o divisor de milhar sendo um ponto

---------------------------------------------------------------------------------------------
ATRIBUIÇÃO
a += 2 ;//Adiciona 2 em a
a -= 2 ;//Subtrai 2 de a
a *= 2 ;//Multiplica a por 2
a /= 2 ;//Divide a por 2
a %= 2 ;//Faz o módulo de a por 2
a .= 2 ;//Concatena a com 2

a++ e a--; //Pós-incremento & Pós-decremento
++a e --a;//Pré-incremento && Pré-decremento


COMENTÁRIOS

//-|
   |-criam comentários de uma linha
#--|

/* */ cria comentários de várias linhas


VARIAVEIS REFERENCIADAS
$b = 5;
$a = &$b; //caso sejam feitas alterações tanto em a quanto em b as mudanças serão
            atualizadas na outra variavel ;

VARIAVEIS VARIANTES OU VARIAVEIS VARIAVEIS
$a = 'var';
$$a = 'outa_var'; //cria uma variavel que terá o nome do valor atribuido a variavel $a

OPERADORES RELACIONAIS

MAIOR E MAIOR IGUAL | > E >=
MENOR E MENOR IGUAL | < E <=
IGUAL E DIFERENTE   | == E (!= OU <>)
IDENTICO            | ===

OPERADOR TERNÁRIO

<expreção> ? <verdadeiro> : <falso> ;

OPERADORES LÓGICOS

E - and ou &&
OU- or ou ||
XOU - xor
NÃO - !

--------------------------------------------------------------------------------
CAPTURANDO VALORES DE FORMS

<form method="get" action="02idade.php">
|-com esses atributos de form todos os valores do input serão
  atribuidos na var glabal $_GET esses valores serão trabalhados
  no arquivo 02idade.php
|-o nome do index na var $_GET será o name especificado no input e o
  valor se´ra o própio value,logo, em
  <input type="checkbox" name="nome" value="sim"/>
  o index será nome e o valor será sim,para capturar esse valor acessaremos
  no arquivo 02idade.php a seguinte var, $_GET['nome'] que possuira o valor "sim";

---------------------------------------------------------------------------------------
isset();//o parametro deve ser uma variavel e deve retornar true caso a var esteja definida
          e retornar false caso ela não esteja definida

date()
  date('Y')//com y maiusculo retorna o ano atual inteiro , exemplo:2017;
  date('y')//retorna o ano atual reduzido, exemplo :17;
---------------------------------------------------------------------------------------------

ESTRUTURAS CONDICIONAIS

if(){              if(){        if(){
           ou      }else{  e    }elseif(){
}                  }            else{
                                }

switch(expreção){
  case(teste):
  break;

  case(teste):
  break;

  default:
}

exemplo:

switch($x){
  case 1:
  //code here
  break;
  case 2:
  //case 2:
  break;
  default:
  //código caso nenhuma das opções ocorrerem
}

switch($x){
  case 1:
  case 2:
  case 3:
  //code here;
  break;
  case 4:
  case 5:
  //code here;
  break;
  default:
  //code here;
}

while(){

}

do{}while();

for($c=1;$c<=$n;$c++){}

Procedimentos-que nada mais são que funções sem retorno
function soma($a,$b){
  $s = $a + $b ;
  echo $ ;
}

Funções - essa possuem retorno

function soma($a,$b){
  return $a,$b;
}
$s = soma(2,3);

RECEBENDO MULTIPLOS PARAMETROS
|-dentro da função usamos uma variavel para capturar o valor
  de retorno na função func_get_args();,que retorna um array com
  todos os valores passados como parametro

|-também usaremos a função func_num_args(); que retorna o numero de parametros
  passados


PASSANDO PARAMETROS:
|POR VALOR:
  function soma_dois($a){
    $a += 2 ;
    echo $a;
  }
  $b = 2;
  soma_dois($b);
  Essa é a passagem mais simples,onde o valor do parametro
  é diretamente tratado durante a função
|POR REFERÊNCIA
  function soma_dois(&$a){
    $a += 2;
    echo a;
  }
  $b = 2;
  soma_dois($b);
  Já essa passagem vai tratar o valor da variavel passada
  mas como o parametro é uma referencia da mesma
  qualquer alteração nele tambem ira afetar a variavel passada
  durante a chamada da função, no exemplo acima tamto $a quanto
  $b irão valer 4.

---------------------------------------------------------------
UTILIZANDO FUNÇÕES E ROTINAS EXTERNAS
|-para utilizar arquivos e códigos externos no PHP
  uilizamos o o include e o require
|include - caso não se consigar incluir o arquivo especificado
  o código irá continuar normalmente
|require - caso o arquivo não consiga ser incluido o código ira parar
  justamente nessa falha
|include_once e require_once - caso o arquivo especificado já foi carregado
  antes no script então ele não irá carregar o arquivo de novo e caso arquivo não
  foi carregado ele ira carregar pela primeira vez
-------------------------------------------------------------------------

FUNÇÕES PARA MANIPULAR STRINGS-

printf() - mostra uma string formatada a partir de alguns parametros
  |-o primeiro argumento é a string a ser formatada e os utros serão os valores
    que serão inseridos na string
  |os valoresque serão inseridos devem teraseguinte representação
    |-%d :para decimais(positivos ou negativos)
    |-%u : para decimais sem sinal(apenas positivos)
    |-%f : valor real
    |-%s : valor string

print_r()
var_dump()
var_export()
|-mostra detalhes de uma determinada variavel,principalmente vetores;

wordwrap()-Irá configurar a quebra de linha de uma determinada função
|-O primeiro argumento é o texto a ser formatado o segundo a numero maximo
  de caracteres para ocorrer a quebra de linha o terceiro é o texto a ser
  inserido (normalmente </br>) quando houver a quebra e o,e o quarto e ultimo
  argumento vai pode ser true ou false , quando false vai não vai quebrar se a
  palavra ultrapassar o limite para a quebra , caso true , mesmo que a palavra
  ultrapasse o valor o ela será quebrada

strlen()- mostra o tamanho de uma string;

trim()-Retira espaços antes e depois de uma string
|-ltrim()-Retira espaços antes de uma string
|-rtrim()-Retira espaços no final de uma string

str_word_count()-Mostra o numero de palavra em uma string
|-O primeiro parametro é a string a ser trabalhada e o segundo é
  oque a função vai setornar,caso:
  |-0 : vai retornar quantas palavra a string tem
  |-1 : vai retorna um array com cada palavra em um index que começa em 0
  |-2 : vai retornar um array em que o index de cada palavra será equivalente
        ao index onde ela aparece na string

explode()-Transforma uma string em um vetor
|-O primeiro argumento é onde dividir a string
|-O segundo argumento sera a string a ser trabalhada

str_split()-Transforma cada letra de uma string em um elemento de um array

join()
implode()-Transforma um array e uma string
|-O primeiro parametro é oque será colocado entre cada elemento do vetor
|-O segundo parametro será o arry ser trabalhada

chr()-Mostra a letra equivalente ao código ASCII
ord()-Mostra o código ASCII equivalente a letra

strtolower()-Converte toda a string em letras minusculas
strtoupper()-Converte toda a string em letras maisculas
ucwords()
ucfirst()-Todas as primeiras letras serão maiusculas

strrev()-Mostra a string inversamente

strpos()-Retorna a posição de um determinados trecho dentro de uma string
|-Possui dois parametros sendo o primeiro a string a ser analizada
|-E o segundo será o trecho ser achado

stripos()-Retorna a posição de um determinados trecho dentro de uma string
          e ignora a caixa(alta ou baixa) do trecho
|-Possui dois parametros sendo o primeiro a string a ser analizada
|-E o segundo será o trecho ser achado

substr_count()-Ira retornar quantas vezes um determinado trecho foi encontrado
|-Possui dois parametros sendo o primeiro a string a ser analizada
|-E o segundo será o trecho ser achado

sbstr()-Retorna o trecho de uma string
|-Possui 3 parametros sendo o primeiro a string a ser analizada
|-E o segundo será o index da primeira letra do trecho
|-E o terceiro será o index da ultima letra do trecho
|-Caso seja passado apenas um index, este será o primeiro do trecho
  ,e apartir dele o trecho será formado até o final da string original

str_pad()-Irá preencher uma string para ela ocupar um determinado tamanho
|-Essa função tem 4 parametros sendo 
|-Primeiro é a própia string a ser trabalhada
|-O segundo qual será o tamanho em numero de caracteres que 
  a string deverá ter
|-O terceiro é com oque a função irá preencher o espaços que sobrarem
|-E por fim o quarto é aonde o as função deve colocar o preenchimento
  , esse prametro pode ser:
  ▲-STR_PAD_RIGHT:preenche todos os caracteres a mais na direita
  ▲-STR_PAD_BOTH:preenche metade na esqueda e metade na direita
  ▲-STR_PAD_LEFT:preenche todos os caracteres a mais na esquerda

str_repeat()-Ira repetir uma determinada string um determinado numero de vezez
|-Ela possui apenas dois parametros, sendo o primeiro a string a ser repetida
|-E o segundo ´parametro é quantas vezez ela devera ser 

str_replace()-Substitui um determinado trecho por outro
|-Essa função recebe trêsparametro 
|-O primeiro é o trecho que será retirado
|-O segundo o trecho a ser colocado
|-O ultimos é a string onde esses trecho serão trabalhados

str_ireplace()-Substitui um determinado trecho por outro e ignora a caixa dos trechos
|-Essa função recebe trêsparametro 
|-O primeiro é o trecho que será retirado
|-O segundo o trecho a ser colocado
|-O ultimos é a string onde esses trecho serão trabalhados

---------------------------------------------------------------------------------------
VETORES E MATRIZES

Declarando arrays
$x=[] ou $x=array();
.. ou simpismente adicionando index a variavel:
$x[0] = 1;
$x[1] = 2;

Para adicionar mais um valor no vetor podemos usar um index vazio na
declaração:
$x[] = 3 ;
▲-Com essa declaração será adicionada mais um index no array
 com o valor 3;


 -----------------------------------------
 Arrays pré definidos

 range()-retorna um array pré definido apartir dos parametros
 ▲-essa função possui 3 parametro
 ▲-o primeiro é o valor inicial do array, o valor no index 0
 ▲-o segundo segundo é o ultimo valor desse array
 ▲-e o ultimo e terceiro é o valor do passo entre a cada elemento
 |-basicamente essa função ira pega o primeiro valor e somar o valor
   do passo até chegar no ultimo valor.

foreach($array as $variavel){}-irá passar por casa valor do array 
  e atribuir cada elemento na variavel $variavel
ou
foreach($array as $chave=>$variavel){}

-----------------------------------------------------------
CHAVES PERSONALIZADAS

podemos criar index personalizados ao invés dos index padrões
criados pelo PHP
para declararmos isso podemos fazer o seguinte

$x=array(1=>"valor1",5=>"valor2",18=>"valor3");
|-com essa declaração podemos acessar atrvés das chaves 1,5,18 
  os valores do array  

---------------------------------------------------
RETIRANDO VALORES

unset()-retira um valor em array
▲-pussui apenas um parametro eque é um array seguido
  do index no qual vc quer retirar

----------------------------------------------------
MATRIZES

nada mais é que vatores dentro de vetores, com isso
podemos declarar com

$matriz = array("vetor1"=>array(1,2),
                "vetor2"=>array(4,5),
                "vetor3"=>array(6,7)
                );

para acessar os valores internos devemos usar duas chaves de 
index seguidas:
  $matriz["vator1"][0];
  ▲-essa declaração vai retornar o valor 1