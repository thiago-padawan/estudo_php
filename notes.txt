| echo ''; |--comando para printar coisar na tela, pode ser usada tags html dentro desse
              comando.
            -- para printar expressões concatenadas,usamos . (ponto),exemplo
            echo $x.', texto'.$y.", mais texto", ou podemos colocar tudo entre aspas
            com "$x, texto $y, mais texto",lembrando que as aspas tem que ser duplas
            , caso seja usada aspas simple, serão mostrado o texto cru.

-VARIAVEIS-
|-sempre começam com $
|-são case sensitive
|-o php suporta os quatro tipos primitivos:inteiro,real,string,booleano
  , ele não te obriga a declarar o tipo junto da variavel pois ele ja converte
  automaticamente de pendendo da atribuição, porém através de um typecast é possivel
  especificar de qual tipo qual tipo a variavel será ,logo é possivel especificar
  para os tipos inteiros: int , integer.Para os tipos reais:real, float, double.Para
  strings sómente é possivel declarar os tipo string.E para valores booleanos não é
  possivel fazer um typecast especifico.

OPERADORES ARITMÉTICOS
+ SOMA
- SUBTRAÇÃO
* mULTIPLICAÇÃO
/ MULTIPLICAÇÃO
% MÓDULO
--ORDEM DE PRECEDENCIA
1= ()
2= *,/,%
3= +,-

RECEBENDO VALORES PELA URL
URL - www.site.com/arquivo.php?a=1&b=2
      |-as variaveis enviadas aqui foram a e b
      |-para manipulalas no php usamos a variavel global $_GET que é um array
        o valor de a da URL vai estar no index de mesmo nome da variavel
        ,logo $_GET["a"] vai conter o valor 1.

MÉTODOS PARA NÚMEROS
abs() - retorna o valor absoluto do número
pow(a,b) - faz a potenciação de a por b
sqrt() - retorna a raiz quadrada do parametro
round() - retorna o valor arredondado do parametro
ceil() - retorna o valor arredondado para cima do parametro
floor() - retorna o valor arredondado para baixo do parametro
intval() - retorna a parte inteira de um valor float
number_format(x,2,",",'.') - retorna o valor de x com 2 casas decimais e com o divisor de
                             decimal sendo uma virgular e o divisor de milhar sendo um ponto

---------------------------------------------------------------------------------------------
ATRIBUIÇÃO
a += 2 ;//Adiciona 2 em a
a -= 2 ;//Subtrai 2 de a
a *= 2 ;//Multiplica a por 2
a /= 2 ;//Divide a por 2
a %= 2 ;//Faz o módulo de a por 2
a .= 2 ;//Concatena a com 2

a++ e a--; //Pós-incremento & Pós-decremento
++a e --a;//Pré-incremento && Pré-decremento


COMENTÁRIOS

//-|
   |-criam comentários de uma linha
#--|

/* */ cria comentários de várias linhas


VARIAVEIS REFERENCIADAS
$b = 5;
$a = &$b; //caso sejam feitas alterações tanto em a quanto em b as mudanças serão
            atualizadas na outra variavel ;

VARIAVEIS VARIANTES OU VARIAVEIS VARIAVEIS
$a = 'var';
$$a = 'outa_var'; //cria uma variavel que terá o nome do valor atribuido a variavel $a

OPERADORES RELACIONAIS

MAIOR E MAIOR IGUAL | > E >=
MENOR E MENOR IGUAL | < E <=
IGUAL E DIFERENTE   | == E (!= OU <>)
IDENTICO            | ===

OPERADOR TERNÁRIO

<expreção> ? <verdadeiro> : <falso> ;

OPERADORES LÓGICOS

E - and ou &&
OU- or ou ||
XOU - xor
NÃO - !

--------------------------------------------------------------------------------
CAPTURANDO VALORES DE FORMS

<form method="get" action="02idade.php">
|-com esses atributos de form todos os valores do input serão
  atribuidos na var glabal $_GET esses valores serão trabalhados
  no arquivo 02idade.php
|-o nome do index na var $_GET será o name especificado no input e o
  valor se´ra o própio value,logo, em
  <input type="checkbox" name="nome" value="sim"/>
  o index será nome e o valor será sim,para capturar esse valor acessaremos
  no arquivo 02idade.php a seguinte var, $_GET['nome'] que possuira o valor "sim";

---------------------------------------------------------------------------------------
isset();//o parametro deve ser uma variavel e deve retornar true caso a var esteja definida
          e retornar false caso ela não esteja definida

date()
  date('Y')//com y maiusculo retorna o ano atual inteiro , exemplo:2017;
  date('y')//retorna o ano atual reduzido, exemplo :17;
---------------------------------------------------------------------------------------------

ESTRUTURAS CONDICIONAIS

if(){              if(){        if(){
           ou      }else{  e    }elseif(){
}                  }            else{
                                }

switch(expreção){
  case(teste):
  break;

  case(teste):
  break;

  default:
}

exemplo:

switch($x){
  case 1:
  //code here
  break;
  case 2:
  //case 2:
  break;
  default:
  //código caso nenhuma das opções ocorrerem
}

switch($x){
  case 1:
  case 2:
  case 3:
  //code here;
  break;
  case 4:
  case 5:
  //code here;
  break;
  default:
  //code here;
}

while(){

}

do{}while();

for($c=1;$c<=$n;$c++){}

Procedimentos-que nada mais são que funções sem retorno
function soma($a,$b){
  $s = $a + $b ;
  echo $ ;
}

Funções - essa possuem retorno

function soma($a,$b){
  return $a,$b;
}
$s = soma(2,3);

RECEBENDO MULTIPLOS PARAMETROS
|-dentro da função usamos uma variavel para capturar o valor
  de retorno na função func_get_args();,que retorna um array com
  todos os valores passados como parametro

|-também usaremos a função func_num_args(); que retorna o numero de parametros
  passados


PASSANDO PARAMETROS:
|POR VALOR:
  function soma_dois($a){
    $a += 2 ;
    echo $a;
  }
  $b = 2;
  soma_dois($b);
  Essa é a passagem mais simples,onde o valor do parametro
  é diretamente tratado durante a função
|POR REFERÊNCIA
  function soma_dois(&$a){
    $a += 2;
    echo a;
  }
  $b = 2;
  soma_dois($b);
  Já essa passagem vai tratar o valor da variavel passada
  mas como o parametro é uma referencia da mesma
  qualquer alteração nele tambem ira afetar a variavel passada
  durante a chamada da função, no exemplo acima tamto $a quanto
  $b irão valer 4.

---------------------------------------------------------------
UTILIZANDO FUNÇÕES E ROTINAS EXTERNAS
|-para utilizar arquivos e códigos externos no PHP
  uilizamos o o include e o require
|include - caso não se consigar incluir o arquivo especificado
  o código irá continuar normalmente
|require - caso o arquivo não consiga ser incluido o código ira parar
  justamente nessa falha
|include_once e require_once - caso o arquivo especificado já foi carregado
  antes no script então ele não irá carregar o arquivo de novo e caso arquivo não
  foi carregado ele ira carregar pela primeira vez  
